@model TMDB2.Models.FavoriteList

<div id="favorite-sidebar">
    <h4>Your Favorites</h4>

    <h5>Movies</h5>
    <ul>
        @foreach (var movie in Model.Movies)
        {
            <li>
                <a href="@Url.Action("Index", "Movie", new { movieId = movie.Id })">
                    @if (!string.IsNullOrEmpty(movie.PosterPath))
                    {
                        <img src="https://image.tmdb.org/t/p/w92/@movie.PosterPath" alt="@movie.Title" class="poster-thumbnail" />
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/92x138?text=No+Image" alt="No Image" class="poster-thumbnail" />
                    }
                    @movie.Title
                </a>
                <button class="btn btn-danger btn-sm remove-favorite" data-id="@movie.Id" data-type="movie">X</button>
            </li>
        }
    </ul>

    <h5>Series</h5>
    <ul>
        @foreach (var series in Model.Series)
        {
            <li>
                <a href="@Url.Action("Index", "Series", new { seriesId = series.Id })">
                    @if (!string.IsNullOrEmpty(series.PosterPath))
                    {
                        <img src="https://image.tmdb.org/t/p/w92/@series.PosterPath" alt="@series.Name" class="poster-thumbnail" />
                    }
                    else
                    {
                        <img src="https://via.placeholder.com/92x138?text=No+Image" alt="No Image" class="poster-thumbnail" />
                    }
                    @series.Name
                </a>
                <button class="btn btn-danger btn-sm remove-favorite" data-id="@series.Id" data-type="series">X</button>
            </li>
        }
    </ul>
</div>

<script type="text/javascript">
    $(document).ready(function () { //ensures that the code inside it runs only after the entire DOM (Document Object Model) has been loaded before a user can interact with them.
        function bindRemoveFavoriteEvents() {   //The off('click') method removes any previously attached click event handlers from elements with the remove-favorite class. Prevents the problem of multiple event bindings, which can occur if the event is attached multiple times (e.g., after a sidebar refresh).
            $('.remove-favorite').off('click').on('click', function () {
                var button = $(this);
                button.prop('disabled', true); // Disable the button to prevent multiple clicks

                var id = button.data('id');
                var type = button.data('type');
                var data = {};

                if (type === "movie") {
                    data.idmovies = id;
                } else if (type === "series") {
                    data.idseries = id;
                }

                var url = (type === "movie")
                    ? '@Url.Action("RemoveFavoriteMovie", "Favorite")'
                    : '@Url.Action("RemoveFavoriteSeries", "Favorite")';

                $.ajax({
                    type: "POST",
                    url: url,
                    data: data, // Send the appropriate data based on the type
                    success: function (response) {
                        if (response.success) {
                            // Reload the sidebar content
                            $('#favorite-sidebar').load('@Url.Action("UpdateFavoriteSidebar", "Favorite")', function () {
                                bindRemoveFavoriteEvents(); // Re-bind events after updating the sidebar
                            });
                        } else {
                            alert('Failed to remove from favorites');
                        }
                    },
                    error: function () {
                        alert('An error occurred while trying to remove from favorites');
                    },
                    complete: function () {
                        button.prop('disabled', false); // Re-enable the button after the operation is complete
                    }
                });
            });
        }

        bindRemoveFavoriteEvents(); // Bind the click events on page load
    });
</script>

